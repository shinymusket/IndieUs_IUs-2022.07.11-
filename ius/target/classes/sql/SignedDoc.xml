<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="board">

<!-- 전체 전자결재 리스트 가져오기 -->
<select id="select_all_eWork_list" resultType="EworksBoardVO">

select  b.workNum,b.WORKCATEGORY,b.status,b.doc_Sub, b.staff_num,  b.staff_Name,b.workupdate,b.workDownDate
from buy_orderTbl b
where b.status='결재'
union
select  p.workNum,p.WORKCATEGORY,p.status,p.doc_Sub, p.staff_num,  p.staff_Name,p.workupdate, p.workDownDate
from spend_Tbl p
where p.status='결재'
union
select  v.workNum,v.WORKCATEGORY,v.status,v.doc_Sub, v.staff_num,  v.staff_Name,v.workupdate, v.workDownDate
from vacation_Tbl v
where v.status='결재'
</select>


<!-- 교직원 아이디 값으로 이름과 사번 가져오기 -->
<select id="select_staff_name_num_by_id" parameterType="String" resultType="staffVO">
	select staff_num, staff_name
	FROM staffId i, staff s
	WHERE i.staff_id = s.staff_id
	AND i.staff_id = #{staff_id}
</select>



<!-- 전자결재 문서 작성을 위한 다음 시퀀스 값 조회하기 -->
<select id="select_doc_next_seq" resultType="int">
	SELECT LAST_NUMBER FROM USER_SEQUENCES WHERE SEQUENCE_NAME = 'DOC_SEQ'
</select>




<!-- 구매신청서 db 전송  -->
<insert id="insert_buy_drafter" parameterType="buyorderDocDraftVO">
	insert into buy_ordertbl(workNum, doc_Sub,product_name, 
	product_amount, product_pay, product_money, 
	 staff_num, staff_name, etc,
     workUpdate)
	 
	values (
	buy_seq.nextval,
	#{doc_Sub}, 
	#{product_name}, 
	#{product_amount}, 
	#{product_pay}, 
	#{product_money}, 
	#{staff_num},
	#{staff_name}, 
	#{etc},
     sysdate
	
	)
	
</insert>






<!-- 구매신청서 db 불러오기  -->

<select id="select_buy_drafter" resultType="buyorderDocDraftVO">
	select 
	workNum, 
	doc_Sub, 
	b.staff_num, 
	s.staff_Name, 
	workUpDate, 
	status
	
	FROM buy_ordertbl b, staff s
	WHERE b.staff_num  = s.staff_num
</select>




<!-- 구매신청서 상세보기 -->

<select id="select_buyorder_info" parameterType="int" resultType="buyorderDocDraftVO">
	select workNum, 
	doc_Sub, 
	product_name, 
	product_amount,
	product_pay,
	product_money,
	b.staff_num, 
	s.staff_Name, 
	etc,
	workUpdate,
	workDownDate
	
	FROM buy_ordertbl b, staff s
	WHERE b.staff_num  = s.staff_num
	AND workNum = #{workNum}
</select>




<!-- 구매 결재 승인  -->
<insert id="adapt_buy_drafter" parameterType="buyorderDocDraftVO">
	update buy_ordertbl set status ='결재' where status='결재중'
	and workNum = ${workNum}
	
</insert>

<insert id="workdown_buy_drafter" parameterType="buyorderDocDraftVO">
update buy_ordertbl set workDownDate = sysdate 
where workNum = ${workNum}
</insert>

<!-- 구매 결재 반려 -->
<insert id="refer_buy_drafter" parameterType="buyorderDocDraftVO">
	update buy_ordertbl set status ='반려' where status='결재중'
	and workNum = ${workNum}
	
</insert>


 <!-- 연차신청서 상세보기-->
 <select id="select_vacation_info" parameterType="int" resultType="vacationVO">
	select 
	workNum, 
	doc_Sub, 
	vacation_reason, 
	vacation_cat, 
	vacation_period, 
	v.staff_num, 
	s.staff_name, 
	workUpdate,
	workDowndate
	
	FROM vacation_Tbl v, staff s
	WHERE v.staff_num  = s.staff_num
	AND workNum = #{workNum}
</select>                 
           
                    
<!-- 지출 결의서 db 전송  -->
<insert id="insert_spending_drafter" parameterType="spendVO" >
	insert into spend_tbl(
	workNum, 
	doc_Sub, 
	spend_day, 
	spend_cat, 
	spend_list, 
	spend_pay, 
	staff_num, 
	staff_name, 
	etc, 
	workUpDate) 
	
	values (
	spend_seq.nextval,
	#{doc_Sub}, 
	#{spend_day},
	#{spend_cat},  
	#{spend_list}, 
	#{spend_pay},
	#{staff_num},
	#{staff_name},
	#{etc},
	sysdate
	)
</insert>



<!-- 지출결의서 상세보기-->
 <select id="select_spend_info" parameterType="int" resultType="spendVO">
	select workNum, 
	doc_Sub, 
	spend_day, 
	spend_cat, 
	spend_list, 
	spend_pay, 
	p.staff_num, 
	s.staff_name, 
	etc, 
	workUpDate,
	workDowndate
	
	FROM spend_Tbl p, staff s
	WHERE p.staff_num  = s.staff_num
	AND workNum = #{workNum}
	
	
	
	
</select>       

<!--지출결의서 db 불러오기  -->
<select id="select_spend_drafter" resultType="spendVO">
	select workNum, doc_Sub, p.staff_num, s.staff_Name, workUpDate, status
	FROM spend_tbl p, staff s
	WHERE p.staff_num  = s.staff_num
</select>






<!-- 지출결의서 결재 승인 -->

<insert id="adapt_spend_drafter" parameterType="buyorderDocDraftVO">
	
	update spend_tbl set status ='결재' where status='결재중'
	and workNum = ${workNum}
	
	
</insert>

<!-- 지출결의서 결재일 불러오기 -->
<insert id="workdown_spend_drafter" parameterType="buyorderDocDraftVO">
update spend_tbl set workDownDate = sysdate 
where workNum = ${workNum}
</insert>

<!-- 지출결의서 결재 반려 -->
<insert id="refer_spend_drafter" parameterType="buyorderDocDraftVO">
	
	update spend_tbl set status ='반려' where status='결재중'
	and workNum = ${workNum}
	
	
</insert>

<!-- 연차신청서 결재 승인 -->
<insert id="adapt_vacation_drafter" parameterType="buyorderDocDraftVO">
	
	update vacation_tbl set status ='결재' where status='결재중'
	and workNum = ${workNum}
	
	
</insert>
<!-- 연차신청서 결재일 등록 -->

<insert id="workdown_vacation_drafter" parameterType="buyorderDocDraftVO">
update vacation_tbl set workDownDate = sysdate 
where workNum = ${workNum}
</insert>

<insert id="refer_vacation_drafter" parameterType="buyorderDocDraftVO">
	
	update vacation_tbl set status ='반려' where status='결재중'
	and workNum = ${workNum}
	
	
</insert>
 











<!-- 연차신청서 db 등록 -->
<insert id="insert_vacation_register" parameterType="vacationVO">
	insert into vacation_tbl(
	workNum, 
	doc_Sub, 
	vacation_reason, 
	vacation_cat, 
	vacation_period, 
	staff_num, 
	staff_name, 
	workupdate) 
	
	values(
	vacation_seq.nextval,
	#{doc_Sub}, 
	#{vacation_reason}, 
	#{vacation_cat}, 
	#{vacation_period},
	#{staff_num},
	#{staff_name},
	sysdate)
</insert>

<!-- 연차신청서 db 리스트 가져오기   -->
<select id="select_vacation_drafter" resultType="vacationVO">
	select workNum, doc_Sub, v.staff_num, s.staff_Name, workupdate, status
	FROM vacation_tbl v, staff s
	WHERE v.staff_num  = s.staff_num
</select>





</mapper>